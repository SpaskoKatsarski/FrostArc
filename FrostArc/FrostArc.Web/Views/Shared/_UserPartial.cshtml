@using FrostArc.Services.Contracts
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService userService

@{
    string? userId = UserManager.GetUserId(User);
}
<ul class="navbar-nav me-5">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown ms-5 me-5">
            <a id="user-dropdown" class="nav-link text-dark dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="cursor: pointer;">
                @await userService.GetDisplayNameAsync(userId!)
            </a>
            <div id="dropdown-items" class="dropdown-menu">
                <a class="dropdown-item" asp-area="" asp-controller="User" asp-action="Details" asp-route-id="@userId">Profile</a>
                <a class="dropdown-item" asp-area="" asp-controller="Community" asp-action="Create" asp-route-userId="@userId">Create a Community</a>
                <hr />
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Login">Login</a>
        </li>
    }
</ul>